<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Speakeasy\SpeakeasyClientSDK\Models\Shared;


/** Filters - Filters are used to query requests. */
class Filters
{
    /**
     * A list of filters to apply to the query.
     *
     * @var array<Filter> $filters
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('filters')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\Speakeasy\SpeakeasyClientSDK\Models\Shared\Filter>')]
    public array $filters;

    /**
     * The maximum number of results to return.
     *
     * @var int $limit
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('limit')]
    public int $limit;

    /**
     * The offset to start the query from.
     *
     * @var int $offset
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('offset')]
    public int $offset;

    /**
     * The operator to use when combining filters.
     *
     * @var string $operator
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('operator')]
    public string $operator;

    /**
     * @param  array<Filter>  $filters
     * @param  int  $limit
     * @param  int  $offset
     * @param  string  $operator
     */
    public function __construct(array $filters, int $limit, int $offset, string $operator)
    {
        $this->filters = $filters;
        $this->limit = $limit;
        $this->offset = $offset;
        $this->operator = $operator;
    }
}