<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Speakeasy\SpeakeasyClientSDK\Models\Shared;


class RevisionContentsMetadata
{
    /**
     * Whether the OAS contains code samples.
     *
     * @var bool $containsCodeSamples
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('contains_code_samples')]
    public bool $containsCodeSamples;

    /**
     *
     * @var \DateTime $createdAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('created_at')]
    public \DateTime $createdAt;

    /**
     * The OAS description
     *
     * @var string $description
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('description')]
    public string $description;

    /**
     * The hash of the contents
     *
     * @var string $hash
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('hash')]
    public string $hash;

    /**
     * The fully qualified namespace
     *
     * @var string $namespace
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('namespace')]
    public string $namespace;

    /**
     * The number of overlay actions in the OAS. Will be 0 if the OAS is not an overlay.
     *
     * @var int $numOverlayActions
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('num_overlay_actions')]
    public int $numOverlayActions;

    /**
     * The operation IDs contained in the OAS. Will be empty if the OAS is an overlay.
     *
     * @var array<string> $operationIds
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('operation_ids')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string>')]
    public array $operationIds;

    /**
     * The digest of the parent bundle
     *
     * @var string $revisionDigest
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('revision_digest')]
    public string $revisionDigest;

    /**
     * The tags contained in the OAS -- NOT the OCI tags. Will be empty if the OAS is an overlay.
     *
     * @var array<string> $tags
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('tags')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string>')]
    public array $tags;

    /**
     * The OAS title
     *
     * @var string $title
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('title')]
    public string $title;

    /**
     *
     * @var RevisionContentsMetadataType $type
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('type')]
    #[\Speakeasy\Serializer\Annotation\Type('\Speakeasy\SpeakeasyClientSDK\Models\Shared\RevisionContentsMetadataType')]
    public RevisionContentsMetadataType $type;

    /**
     * The OAS version
     *
     * @var string $version
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('version')]
    public string $version;

    /**
     * The workspace ID
     *
     * @var string $workspaceId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('workspace_id')]
    public string $workspaceId;

    /**
     * @param  bool  $containsCodeSamples
     * @param  \DateTime  $createdAt
     * @param  string  $description
     * @param  string  $hash
     * @param  string  $namespace
     * @param  int  $numOverlayActions
     * @param  array<string>  $operationIds
     * @param  string  $revisionDigest
     * @param  array<string>  $tags
     * @param  string  $title
     * @param  RevisionContentsMetadataType  $type
     * @param  string  $version
     * @param  string  $workspaceId
     * @phpstan-pure
     */
    public function __construct(bool $containsCodeSamples, \DateTime $createdAt, string $description, string $hash, string $namespace, int $numOverlayActions, array $operationIds, string $revisionDigest, array $tags, string $title, RevisionContentsMetadataType $type, string $version, string $workspaceId)
    {
        $this->containsCodeSamples = $containsCodeSamples;
        $this->createdAt = $createdAt;
        $this->description = $description;
        $this->hash = $hash;
        $this->namespace = $namespace;
        $this->numOverlayActions = $numOverlayActions;
        $this->operationIds = $operationIds;
        $this->revisionDigest = $revisionDigest;
        $this->tags = $tags;
        $this->title = $title;
        $this->type = $type;
        $this->version = $version;
        $this->workspaceId = $workspaceId;
    }
}